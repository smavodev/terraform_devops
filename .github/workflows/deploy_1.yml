name: Terraform con Docker

on:
#  push:
#    branches: [master, develop]
#  pull_request:
#    branches: [master]
  workflow_dispatch:
    inputs:
      env:
        description: "Ambiente (dev, staging, prod)"
        required: true
        default: "dev"
      action:
        description: "Acci√≥n (plan, apply, destroy)"
        required: true
        default: "plan"

jobs:
  terraform_deploy:
    runs-on: ubuntu-latest

    env:
      TERRAFORM_DIR: ./shared/terraform-dia22-devops  # ‚úÖ Variable global

    defaults:
      run:
        working-directory: ${{ env.TERRAFORM_DIR }} # ‚úÖ Directorio base para todos los pasos

    steps:
      - name: üì• Checkout del repositorio
        uses: actions/checkout@v4

      - name: üê≥ Construir imagen Docker
        run: docker build -t terraform-runner .

      - name: üöÄ Ejecutar Terraform desde Docker
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/${{ env.TERRAFORM_DIR }}:/workspace \
            terraform-runner ${{ github.event.inputs.env }} ${{ github.event.inputs.action }}

  notify_slack_discord:
    needs: terraform_deploy   # ‚¨ÖÔ∏è RELACI√ìN DIRECTA: espera a que termine el job terraform
    if: always()              # ‚¨ÖÔ∏è Se ejecuta incluso si terraform falla
    uses: ./.github/workflows/notify.yml
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    with:
      status: ${{ needs.terraform_deploy.result }}
      branch: ${{ github.ref_name }}
      actor: ${{ github.actor }}
      repo: ${{ github.event.repository.name }}