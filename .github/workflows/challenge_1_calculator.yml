name: Challenge 1 - Infrastructure Calculator

on:
#  push:
#    branches: [master, develop]
#  pull_request:
#    branches: [master]
  workflow_dispatch:
    inputs:
      action:
        description: "Acci√≥n a ejecutar (plan o apply)"
        required: true
        default: "plan"
      ref:
        description: "Rama o tag a ejecutar (por ejemplo: master, develop)"
        required: false
        default: "develop"

jobs:
  terraform_challenge_1:
    runs-on: ubuntu-latest

    env:
      TERRAFORM_VERSION: 1.12.2
      TERRAFORM_DIR: ./shared/terraform-challenges/challenge-1-calculator

    defaults:
      run:
        working-directory: ${{ env.TERRAFORM_DIR }}

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: üì¶ Inicializar Terraform
        run: terraform init

      - name: ‚úÖ Validar configuraci√≥n
        run: terraform validate

      - name: üöÄ Ejecutar plan o apply
        run: |
          ACTION="${{ github.event.inputs.action || 'plan' }}"
          echo "üîç Acci√≥n seleccionada: $ACTION"
          if [ "$ACTION" = "apply" ]; then
            terraform apply -auto-approve
          else
            terraform plan
          fi

      - name: üìÑ Mostrar archivo generado
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          if [ -f "./outputs/cost-report.json" ]; then
            echo "üìÑ Contenido del archivo cost-report.json:"
            cat ./outputs/cost-report.json
          else
            echo "‚ö†Ô∏è Archivo cost-report.json no generado."
          fi

      - name: üì¶ Subir artefactos generados
        if: ${{ github.event.inputs.action == 'apply' && success() }}
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: |
            ${{ env.TERRAFORM_DIR }}/outputs/*
          if-no-files-found: ignore  # ‚úÖ Evita el warning

  notify_slack_discord:
    needs: terraform_challenge_1   # ‚¨ÖÔ∏è RELACI√ìN DIRECTA: espera a que termine el job
    if: always()                   # ‚¨ÖÔ∏è Se ejecuta incluso si terraform falla
    uses: ./.github/workflows/notify.yml
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    with:
      status: ${{ needs.terraform_challenge_1.result }} # Nombre del job que lo llama
      branch: ${{ github.ref_name }}
      actor: ${{ github.actor }}
      repo: ${{ github.event.repository.name }}
